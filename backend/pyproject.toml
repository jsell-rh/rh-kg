[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kg"
version = "0.1.0"
description = "Red Hat Knowledge Graph - Modern Python infrastructure for knowledge management"
readme = "../README.md"
license = {text = "MIT"}
authors = [
    {name = "John Sell", email = "jsell@redhat.com"}
]
maintainers = [
    {name = "John Sell", email = "jsell@redhat.com"}
]
keywords = ["knowledge-graph", "python", "red-hat", "infrastructure"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Typing :: Typed",
]
requires-python = ">=3.12"
dependencies = [
    "pydantic>=2.8.0",
    "fastapi>=0.111.0",
    "click>=8.1.7",
    "pyyaml>=6.0.1",
    "pytest>=8.3.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.5.0",
    "mypy>=1.11.0",
    "pre-commit>=3.7.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.27.0",  # For FastAPI testing
    "types-pyyaml>=6.0.12",
]
test = [
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.27.0",
]

[project.scripts]
kg = "kg.cli:main"

[project.urls]
Homepage = "https://github.com/redhat/rh-kg"
Repository = "https://github.com/redhat/rh-kg"
Documentation = "https://github.com/redhat/rh-kg/docs"
"Bug Tracker" = "https://github.com/redhat/rh-kg/issues"

[tool.hatch.version]
path = "kg/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["kg"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=kg",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "network: Tests requiring network access",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["kg"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",   # line too long, handled by black
    "PLR0913", # too many arguments to function call
    "PLR2004", # magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "ARG", "FBT", "PLC0415"]

[tool.ruff.lint.isort]
known-first-party = ["kg"]
force-sort-within-sections = true

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.uv]
dev-dependencies = [
    "ruff>=0.5.0",
    "mypy>=1.11.0",
    "pre-commit>=3.7.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.27.0",
    "types-pyyaml>=6.0.12",
]
